name: Deploy to Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Build Frontend
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" ]; then
            echo "Secret FIREBASE_SERVICE_ACCOUNT_KEY_B64 is not set."
            exit 1
          fi
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > serviceAccountKey.json
          if [ ! -s serviceAccountKey.json ]; then
            echo "File is empty or does not exist."
            exit 1
          fi
          if jq -e . serviceAccountKey.json > /dev/null; then
            echo "JSON is valid."
          else
            echo "Invalid JSON."
            exit 1
          fi

      - name: Login to Firebase using Service Account
        run: |
          firebase login:ci --interactive=false --project=teamitaka-swagger-practice
          echo "Firebase CLI logged in with service account."

      - name: Deploy Frontend to Firebase Hosting
        run: firebase deploy --only hosting:production --project teamitaka-swagger-practice --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./serviceAccountKey.json

      - name: Clean up
        if: always()
        run: rm -f ./serviceAccountKey.json

  deploy-functions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./functions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" ]; then
            echo "Secret FIREBASE_SERVICE_ACCOUNT_KEY_B64 is not set."
            exit 1
          fi
          SECRET_LEN=$(echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | wc -c)
          echo "DEBUG(functions): FIREBASE_SERVICE_ACCOUNT_KEY_B64 length: ${SECRET_LEN}"
          mkdir -p ./config
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > ./config/serviceAccountKey.json
          if [ ! -s ./config/serviceAccountKey.json ]; then
            echo "File is empty or does not exist."
            exit 1
          fi
          if jq -e . ./config/serviceAccountKey.json > /dev/null; then
            echo "JSON is valid."
          else
            echo "Invalid JSON."
            exit 1
          fi

      - name: Login to Firebase using Service Account
        run: |
          firebase login:ci --interactive=false --project=teamitaka-swagger-practice
          echo "Firebase CLI logged in with service account."

      - name: Set Firebase Environment Variables
        env:
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
        run: |
          if [ -n "${CLIENT_URL}" ]; then
            firebase functions:config:set client.url="$CLIENT_URL" --project teamitaka-swagger-practice
          else
            echo "CLIENT_URL is not set in Secrets, using default."
          fi

      - name: Deploy Backend to Firebase Functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./config/serviceAccountKey.json
        run: firebase deploy --only functions --project teamitaka-swagger-practice --non-interactive

      - name: Clean up
        if: always()
        run: rm -f ./config/serviceAccountKey.json