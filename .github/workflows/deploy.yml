name: Deploy to Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Build Frontend
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          # 1) GitHub Secrets에서 가져온 Base64-encoded 값이 있는지 확인
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" ]; then
            echo "Secret FIREBASE_SERVICE_ACCOUNT_KEY_B64 is not set."
            exit 1
          fi

          # 2) Base64 디코딩 -> serviceAccountKey.json 생성
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > serviceAccountKey.json

          # 3) 파일이 정상 생성되었는지 검증
          if [ ! -s serviceAccountKey.json ]; then
            echo "File is empty or does not exist."
            exit 1
          fi

          # 4) JSON 검증 (민감정보를 print하지 않도록 -e 옵션)
          if jq -e . serviceAccountKey.json > /dev/null; then
            echo "JSON is valid."
          else
            echo "Invalid JSON."
            exit 1
          fi

      - name: Deploy Frontend to Firebase Hosting
        run: firebase deploy --only hosting:production --project teamitaka-swagger-practice --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./serviceAccountKey.json

      - name: Clean up
        if: always()
        run: rm -f ./serviceAccountKey.json

  deploy-functions:
    runs-on: ubuntu-latest
    defaults:
      # 🔥 여기서 working-directory가 ./functions 폴더 입니다.
      run:
        working-directory: ./functions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          # 1) GitHub Secrets에서 가져온 Base64-encoded 값이 있는지 확인
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" ]; then
            echo "Secret FIREBASE_SERVICE_ACCOUNT_KEY_B64 is not set."
            exit 1
          fi

          # [디버그: Secret 길이] (선택사항)
          SECRET_LEN=$(echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | wc -c)
          echo "DEBUG(functions): FIREBASE_SERVICE_ACCOUNT_KEY_B64 length: ${SECRET_LEN}"

          # 2) Base64 디코딩 -> ../serviceAccountKey.json (repo 루트에 생성)
          #    ✅ FIX HERE: 기존 ../../ → ../
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > ../serviceAccountKey.json

          # 3) 파일 검증
          if [ ! -s ../serviceAccountKey.json ]; then
            echo "File is empty or does not exist."
            exit 1
          fi

          if jq -e . ../serviceAccountKey.json > /dev/null; then
            echo "JSON is valid."
          else
            echo "Invalid JSON."
            exit 1
          fi

      - name: Deploy Backend to Firebase Functions
        env:
          # ✅ FIX HERE: 기존 ../../serviceAccountKey.json → ../serviceAccountKey.json
          GOOGLE_APPLICATION_CREDENTIALS: ../serviceAccountKey.json
        run: firebase deploy --only functions --project teamitaka-swagger-practice --non-interactive

      - name: Clean up
        if: always()
        # ✅ FIX HERE: 기존 ../../serviceAccountKey.json → ../serviceAccountKey.json
        run: rm -f ../serviceAccountKey.json
