name: Deploy to Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Build Frontend
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          # Base64로 인코딩된 Service Account JSON을 디코딩하여 파일 생성
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > serviceAccountKey.json

          # 파일 생성 여부 및 크기 확인
          if [ -s serviceAccountKey.json ]; then
            echo "File exists and is not empty."
          else
            echo "File is empty or does not exist."
            exit 1
          fi

          # JSON 유효성 검사 및 오류 시 내용 출력
          jq . serviceAccountKey.json || head -n 5 serviceAccountKey.json

      - name: Deploy Frontend to Firebase Hosting
        run: firebase deploy --only hosting:production --project teamitaka-swagger-practice --debug --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./serviceAccountKey.json

      - name: Clean up
        if: always()
        run: rm -f ./serviceAccountKey.json

  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install jq (for JSON validation)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Firebase Service Account
        run: |
          # Base64로 인코딩된 Service Account JSON을 디코딩하여 파일 생성
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_B64 }}" | base64 -d > serviceAccountKey.json

          # 파일 생성 여부 및 크기 확인
          if [ -s serviceAccountKey.json ]; then
            echo "File exists and is not empty."
          else
            echo "File is empty or does not exist."
            exit 1
          fi

          # JSON 유효성 검사 및 오류 시 내용 출력
          jq . serviceAccountKey.json || head -n 5 serviceAccountKey.json

      - name: Deploy Backend to Firebase Functions
        run: firebase deploy --only functions --project teamitaka-swagger-practice --debug --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./serviceAccountKey.json

      - name: Clean up
        if: always()
        run: rm -f ./serviceAccountKey.json