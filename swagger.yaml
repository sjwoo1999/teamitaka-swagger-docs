openapi: 3.0.0
info:
  title: Teamitaka Backend API
  version: 1.0.0
  description: Teamitaka 백엔드 API 문서
servers:
  - url: http://localhost:3000
    description: 로컬 개발 서버

paths:
  # 관리자 관련 엔드포인트
  /admin/login:
    post:
      summary: 관리자 로그인
      description: 관리자가 이메일과 비밀번호를 통해 로그인하여 JWT 토큰을 발급받습니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 관리자 이메일
                password:
                  type: string
                  description: 관리자 비밀번호
              required:
                - email
                - password
      responses:
        '200':
          description: 로그인 성공, JWT 토큰 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT 토큰
                  message:
                    type: string
                    example: "관리자 로그인 성공"
        '401':
          description: 비밀번호 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 관리자 계정이 아님
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/certified-users:
    get:
      summary: 인증된 유저 목록 조회
      description: UnivCert API를 통해 인증된 사용자 목록을 조회합니다.
      responses:
        '200':
          description: 인증된 유저 목록 반환
          content:
            application/json:
              schema:
                type: object
                description: UnivCert API 응답 형식에 따름
        '400':
          description: UnivCert API 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /admin/clear-verified-emails:
    delete:
      summary: 인증된 이메일 전체 삭제
      description: 데이터베이스에서 모든 인증된 이메일 기록을 삭제합니다.
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 모든 인증된 이메일이 삭제되었습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 지원 관련 엔드포인트
  /applications/{recruitment_id}:
    post:
      summary: 모집공고에 지원하기
      description: 사용자가 특정 모집공고에 지원합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '201':
          description: 지원 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    get:
      summary: 지원자 목록 조회
      description: 특정 모집공고의 지원자 목록을 조회합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '200':
          description: 지원자 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /applications/{application_id}/approve:
    patch:
      summary: 지원 승인
      description: 특정 지원을 승인합니다.
      parameters:
        - in: path
          name: application_id
          required: true
          schema:
            type: string
          description: 지원 ID
      responses:
        '200':
          description: 승인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "지원이 승인되었습니다."
                  updatedApplication:
                    $ref: '#/components/schemas/Application'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /applications/{application_id}/reject:
    patch:
      summary: 지원 거절
      description: 특정 지원을 거절합니다.
      parameters:
        - in: path
          name: application_id
          required: true
          schema:
            type: string
          description: 지원 ID
      responses:
        '200':
          description: 거절 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "지원이 거절되었습니다."
                  updatedApplication:
                    $ref: '#/components/schemas/Application'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 인증 관련 엔드포인트
  /auth/register:
    post:
      summary: 사용자 회원가입
      description: 새로운 사용자를 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 회원가입 성공!"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: 입력값 오류 또는 이메일 중복
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: 사용자 로그인
      description: 사용자가 로그인하여 JWT 토큰을 발급받습니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 로그인 성공!"
                  token:
                    type: string
                    description: JWT 토큰
        '400':
          description: 입력값 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/validate-password:
    post:
      summary: 비밀번호 유효성 검사
      description: 제공된 비밀번호의 유효성을 검사합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      responses:
        '200':
          description: 유효성 검사 결과 반환
          content:
            application/json:
              schema:
                type: object
                description: 비밀번호 유효성 검사 결과
        '400':
          description: 비밀번호 입력 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 댓글 관련 엔드포인트
  /recruitments/{recruitment_id}/comment:
    get:
      summary: 모집공고 댓글 조회
      description: 특정 모집공고에 달린 댓글 목록을 조회합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '200':
          description: 댓글 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 댓글 작성
      description: 특정 모집공고에 댓글을 작성합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 댓글 내용
              required:
                - content
      responses:
        '201':
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 개발용 엔드포인트
  /dev/clear-verified-emails:
    delete:
      summary: 인증된 이메일 전체 삭제 (개발용)
      description: 개발 환경에서 모든 인증된 이메일 기록을 삭제합니다.
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "✅ 모든 인증된 이메일이 삭제되었습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 모집공고 초안 관련 엔드포인트
  /recruitment/draft:
    post:
      summary: 모집공고 임시저장
      description: 모집공고를 임시저장합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitmentDraft'
      responses:
        '201':
          description: 임시저장 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "임시저장되었습니다."
                  draftRecruitment:
                    $ref: '#/components/schemas/RecruitmentDraft'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 팀원 관련 엔드포인트
  /projects/{project_id}/members:
    get:
      summary: 팀원 목록 조회
      description: 특정 프로젝트의 팀원 목록을 조회합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 팀원 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMember'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 팀원 추가
      description: 특정 프로젝트에 팀원을 추가합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 추가할 사용자 ID
                role:
                  type: string
                  description: 팀원 역할 (기본값: "팀원")
              required:
                - user_id
      responses:
        '201':
          description: 팀원 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMember'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/members/{member_id}:
    put:
      summary: 팀원 역할 수정
      description: 특정 팀원의 역할을 수정합니다.
      parameters:
        - in: path
          name: member_id
          required: true
          schema:
            type: string
          description: 팀원 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: 수정할 역할
              required:
                - role
      responses:
        '200':
          description: 역할 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "팀원 역할이 수정되었습니다."
                  member:
                    $ref: '#/components/schemas/ProjectMember'
        '404':
          description: 팀원 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 팀원 삭제
      description: 특정 팀원을 프로젝트에서 삭제합니다.
      parameters:
        - in: path
          name: member_id
          required: true
          schema:
            type: string
          description: 팀원 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "팀원이 삭제되었습니다."
        '404':
          description: 팀원 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 프로필 관련 엔드포인트
  /profile/{user_id}:
    get:
      summary: 사용자 프로필 조회
      description: 특정 사용자의 프로필 정보를 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 프로필 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/{user_id}/ratings:
    get:
      summary: 사용자 평점 조회
      description: 특정 사용자의 평점 정보를 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 평점 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/{user_id}/projects:
    get:
      summary: 사용자 참여 프로젝트 조회
      description: 특정 사용자가 참여한 프로젝트 목록을 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 프로젝트 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 프로젝트 관련 엔드포인트
  /projects:
    get:
      summary: 전체 프로젝트 조회
      description: 모든 프로젝트 목록을 조회합니다.
      responses:
        '200':
          description: 프로젝트 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}:
    get:
      summary: 특정 프로젝트 조회
      description: 특정 프로젝트의 상세 정보를 조회합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 프로젝트 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: 프로젝트 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: 프로젝트 수정
      description: 특정 프로젝트 정보를 수정합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: 프로젝트 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 프로젝트 삭제
      description: 특정 프로젝트를 삭제합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "프로젝트가 삭제되었습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/completed:
    get:
      summary: 완료된 프로젝트 조회
      description: 현재 사용자가 참여한 완료된 프로젝트 목록을 조회합니다.
      responses:
        '200':
          description: 완료된 프로젝트 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 모집공고 관련 엔드포인트
  /recruitment:
    get:
      summary: 전체 모집공고 조회
      description: 모든 모집공고 목록을 조회합니다.
      responses:
        '200':
          description: 모집공고 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recruitment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 모집공고 생성
      description: 새로운 모집공고를 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recruitment'
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /recruitment/{recruitment_id}:
    get:
      summary: 특정 모집공고 조회
      description: 특정 모집공고의 상세 정보를 조회합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '200':
          description: 모집공고 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recruitment'
        '404':
          description: 모집공고 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: 모집공고 수정
      description: 특정 모집공고를 수정합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recruitment'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고가 수정되었습니다."
                  updatedRecruitment:
                    $ref: '#/components/schemas/Recruitment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 모집공고 삭제
      description: 특정 모집공고를 삭제합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "모집공고가 삭제되었습니다."
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 리뷰 관련 엔드포인트
  /reviews:
    post:
      summary: 리뷰 생성
      description: 프로젝트에 대한 리뷰를 작성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: 리뷰 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: 입력값 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /reviews/user/{user_id}:
    get:
      summary: 사용자 리뷰 조회
      description: 특정 사용자에 대한 리뷰 목록을 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
          description: 사용자 ID
      responses:
        '200':
          description: 리뷰 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reviews/project/{project_id}:
    get:
      summary: 프로젝트 리뷰 조회
      description: 특정 프로젝트에 대한 리뷰 목록을 조회합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 리뷰 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reviews/{review_id}:
    delete:
      summary: 리뷰 삭제
      description: 특정 리뷰를 삭제합니다.
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            type: string
          description: 리뷰 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Review deleted"
        '404':
          description: 리뷰 없음 또는 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 스크랩 관련 엔드포인트
  /scraps/recruitments:
    get:
      summary: 스크랩한 모집공고 조회
      description: 사용자가 스크랩한 모집공고 목록을 조회합니다.
      responses:
        '200':
          description: 스크랩 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recruitment'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /recruitment/{recruitment_id}/scrap:
    put:
      summary: 모집공고 스크랩 토글
      description: 모집공고를 스크랩하거나 스크랩을 취소합니다.
      parameters:
        - in: path
          name: recruitment_id
          required: true
          schema:
            type: string
          description: 모집공고 ID
      responses:
        '200':
          description: 스크랩 상태 변경 성공
          content:
            application/json:
              schema:
                type: string
                description: 스크랩 상태 메시지
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 검색 관련 엔드포인트
  /search:
    get:
      summary: 검색
      description: 키워드를 기반으로 모집공고 등을 검색합니다.
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: 검색 키워드
      responses:
        '200':
          description: 검색 결과 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recruitment'
        '400':
          description: 검색어 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 타임라인 관련 엔드포인트
  /projects/{project_id}/timeline:
    get:
      summary: 타임라인 조회
      description: 특정 프로젝트의 타임라인을 조회합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 타임라인 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timeline'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 타임라인 이벤트 추가
      description: 특정 프로젝트에 타임라인 이벤트를 추가합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  description: 이벤트 내용
                date:
                  type: string
                  format: date
                  description: 이벤트 날짜
              required:
                - event
                - date
      responses:
        '201':
          description: 이벤트 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/{project_id}/timeline/{event_id}:
    put:
      summary: 타임라인 이벤트 수정
      description: 특정 타임라인 이벤트를 수정합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
        - in: path
          name: event_id
          required: true
          schema:
            type: string
          description: 이벤트 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  description: 이벤트 내용
                date:
                  type: string
                  format: date
                  description: 이벤트 날짜
              required:
                - event
                - date
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
        '404':
          description: 이벤트 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 타임라인 이벤트 삭제
      description: 특정 타임라인 이벤트를 삭제합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
        - in: path
          name: event_id
          required: true
          schema:
            type: string
          description: 이벤트 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "타임라인 이벤트가 삭제되었습니다."
        '404':
          description: 이벤트 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 할 일 관련 엔드포인트
  /projects/{project_id}/todo:
    get:
      summary: 할 일 조회
      description: 특정 프로젝트의 할 일 목록을 조회합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      responses:
        '200':
          description: 할 일 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 할 일 추가
      description: 특정 프로젝트에 할 일을 추가합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 할 일 내용
                is_completed:
                  type: boolean
                  description: 완료 여부 (기본값: false)
              required:
                - content
      responses:
        '201':
          description: 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /projects/{project_id}/todo/{todo_id}:
    put:
      summary: 할 일 수정
      description: 특정 할 일의 상태를 수정합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
        - in: path
          name: todo_id
          required: true
          schema:
            type: string
          description: 할 일 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_completed:
                  type: boolean
                  description: 완료 여부
              required:
                - is_completed
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: 할 일 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 할 일 삭제
      description: 특정 할 일을 삭제합니다.
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
          description: 프로젝트 ID
        - in: path
          name: todo_id
          required: true
          schema:
            type: string
          description: 할 일 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "할 일이 삭제되었습니다."
        '404':
          description: 할 일 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  # 대학 인증 관련 엔드포인트
  /univ/send-otp:
    post:
      summary: OTP 전송
      description: 대학 이메일 인증을 위한 OTP를 전송합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 대학 이메일
              required:
                - email
      responses:
        '200':
          description: OTP 전송 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP 전송 완료"
        '400':
          description: 입력 오류 또는 지원되지 않는 학교
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /univ/verify-otp:
    post:
      summary: OTP 검증
      description: 전송된 OTP 코드를 검증합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 대학 이메일
                code:
                  type: string
                  description: OTP 코드
              required:
                - email
                - code
      responses:
        '200':
          description: 인증 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증 성공"
                  univName:
                    type: string
                    description: 대학 이름
                  certified_email:
                    type: string
                    description: 인증된 이메일
                  certified_date:
                    type: string
                    format: date-time
                    description: 인증 날짜
        '400':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 사용자 관련 엔드포인트
  /users:
    get:
      summary: 전체 사용자 조회
      description: 모든 사용자 목록을 조회합니다.
      responses:
        '200':
          description: 사용자 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: 사용자 생성
      description: 새로운 사용자를 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

# 컴포넌트 정의
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: 오류 메시지
      required:
        - message

    Admin:
      type: object
      properties:
        id:
          type: integer
          description: 관리자 ID (기본 키)
        email:
          type: string
          format: email
          description: 관리자 이메일 (고유)
        password:
          type: string
          description: 해시된 비밀번호
        role:
          type: string
          default: "ADMIN"
          description: 관리자 역할
      required:
        - email
        - password

    Application:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
          description: 지원 ID (기본 키, UUID v4)
        user_id:
          type: string
          format: uuid
          description: 사용자 ID
        recruitment_id:
          type: string
          format: uuid
          description: 모집공고 ID
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
          default: "PENDING"
          description: 지원 상태
      required:
        - user_id
        - recruitment_id

    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 댓글 ID (기본 키, UUID v4)
        content:
          type: string
          description: 댓글 내용
        user_id:
          type: string
          format: uuid
          description: 작성자 ID
        recruitment_id:
          type: string
          format: uuid
          description: 모집공고 ID
      required:
        - content
        - user_id
        - recruitment_id

    Project:
      type: object
      properties:
        project_id:
          type: string
          format: uuid
          description: 프로젝트 ID (기본 키, UUID v4)
        title:
          type: string
          description: 프로젝트 제목
        description:
          type: string
          description: 프로젝트 설명
        user_id:
          type: string
          format: uuid
          description: 프로젝트 생성자 ID
        recruitment_id:
          type: string
          format: uuid
          description: 모집공고 ID
        start_date:
          type: string
          format: date
          description: 시작 날짜
        end_date:
          type: string
          format: date
          description: 종료 날짜
        status:
          type: string
          enum:
            - "예정"
            - "진행 중"
            - "완료"
          default: "예정"
          description: 프로젝트 상태
        role:
          type: string
          description: 역할
      required:
        - description
        - user_id
        - recruitment_id

    ProjectMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 프로젝트 멤버 ID (기본 키, UUID v4)
        project_id:
          type: string
          format: uuid
          description: 프로젝트 ID
        user_id:
          type: string
          format: uuid
          description: 사용자 ID
        role:
          type: string
          enum:
            - "팀장"
            - "팀원"
          default: "팀원"
          description: 역할
        joined_at:
          type: string
          format: date-time
          description: 참여 시간
        status:
          type: string
          enum:
            - "활성"
            - "비활성"
          default: "활성"
          description: 상태
      required:
        - project_id
        - user_id
        - role

    Recruitment:
      type: object
      properties:
        recruitment_id:
          type: string
          format: uuid
          description: 모집공고 ID (기본 키, UUID v4)
        title:
          type: string
          description: 제목
        description:
          type: string
          description: 설명
        status:
          type: string
          enum:
            - "OPEN"
            - "CLOSED"
          default: "OPEN"
          description: 상태
        user_id:
          type: string
          format: uuid
          description: 작성자 ID
        photo:
          type: string
          description: 사진 URL
        createdAt:
          type: string
          format: date-time
          description: 생성 시간
        updatedAt:
          type: string
          format: date-time
          description: 수정 시간
      required:
        - title
        - description
        - user_id

    RecruitmentDraft:
      type: object
      properties:
        title:
          type: string
          description: 제목
        description:
          type: string
          description: 설명
        user_id:
          type: string
          format: uuid
          description: 작성자 ID
      required:
        - title
        - description
        - user_id

    Review:
      type: object
      properties:
        review_id:
          type: string
          format: uuid
          description: 리뷰 ID (기본 키, UUID v4)
        project_id:
          type: string
          format: uuid
          description: 프로젝트 ID
        reviewer_id:
          type: string
          format: uuid
          description: 리뷰 작성자 ID
        reviewee_id:
          type: string
          format: uuid
          description: 리뷰 대상자 ID
        role_description:
          type: string
          description: 역할 설명
        ability:
          type: integer
          minimum: 1
          maximum: 5
          description: 능력 점수
        effort:
          type: integer
          minimum: 1
          maximum: 5
          description: 노력 점수
        commitment:
          type: integer
          minimum: 1
          maximum: 5
          description: 헌신 점수
        communication:
          type: integer
          minimum: 1
          maximum: 5
          description: 소통 점수
        reflection:
          type: integer
          minimum: 1
          maximum: 5
          description: 성찰 점수
        overall_rating:
          type: integer
          minimum: 1
          maximum: 5
          description: 종합 평점
        comment:
          type: string
          description: 리뷰 내용
      required:
        - project_id
        - reviewer_id
        - reviewee_id
        - ability
        - effort
        - commitment
        - communication
        - reflection
        - overall_rating

    Rating:
      type: object
      properties:
        ability:
          type: integer
          minimum: 1
          maximum: 5
          description: 능력 점수
        effort:
          type: integer
          minimum: 1
          maximum: 5
          description: 노력 점수
        commitment:
          type: integer
          minimum: 1
          maximum: 5
          description: 헌신 점수
        communication:
          type: integer
          minimum: 1
          maximum: 5
          description: 소통 점수
        reflection:
          type: integer
          minimum: 1
          maximum: 5
          description: 성찰 점수
        overall_rating:
          type: integer
          minimum: 1
          maximum: 5
          description: 종합 평점
      required:
        - ability
        - effort
        - commitment
        - communication
        - reflection
        - overall_rating

    Timeline:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          description: 이벤트 ID (기본 키, UUID v4)
        project_id:
          type: string
          format: uuid
          description: 프로젝트 ID
        event:
          type: string
          description: 이벤트 내용
        date:
          type: string
          format: date
          description: 이벤트 날짜
      required:
        - project_id
        - event
        - date

    Todo:
      type: object
      properties:
        todo_id:
          type: string
          format: uuid
          description: 할 일 ID (기본 키, UUID v4)
        project_id:
          type: string
          format: uuid
          description: 프로젝트 ID
        content:
          type: string
          description: 할 일 내용
        is_completed:
          type: boolean
          default: false
          description: 완료 여부
      required:
        - project_id
        - content

    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          description: 사용자 ID (기본 키, UUID v4)
        username:
          type: string
          maxLength: 255
          description: 사용자 이름 (고유)
        email:
          type: string
          maxLength: 255
          description: 이메일 (고유)
        password:
          type: string
          maxLength: 255
          description: 해시된 비밀번호
        userType:
          type: string
          enum:
            - "ADMIN"
            - "MEMBER"
          default: "MEMBER"
          description: 사용자 유형
        role:
          type: string
          enum:
            - "ADMIN"
            - "MEMBER"
          default: "MEMBER"
          description: 역할
        university:
          type: string
          maxLength: 255
          description: 대학
        major:
          type: string
          maxLength: 255
          description: 전공
        avatar:
          type: string
          maxLength: 255
          description: 프로필 사진 URL
        bio:
          type: string
          description: 자기소개
        awards:
          type: string
          description: 수상이력
        skills:
          type: string
          description: 보유 스킬
        portfolio_url:
          type: string
          maxLength: 255
          description: 포트폴리오 링크
        createdAt:
          type: string
          format: date-time
          description: 생성 시간
        updatedAt:
          type: string
          format: date-time
          description: 수정 시간
      required:
        - username
        - email
        - password

    UserRegister:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
          description: 사용자 이름 (고유)
        email:
          type: string
          maxLength: 255
          description: 이메일 (고유)
        password:
          type: string
          maxLength: 255
          description: 비밀번호
        university:
          type: string
          maxLength: 255
          description: 대학
        major:
          type: string
          maxLength: 255
          description: 전공
      required:
        - username
        - email
        - password